// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: checkpoint.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_checkpoint_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_checkpoint_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_checkpoint_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_checkpoint_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_checkpoint_2eproto;
namespace checkpoint {
class CompleteCheckpointRequest;
struct CompleteCheckpointRequestDefaultTypeInternal;
extern CompleteCheckpointRequestDefaultTypeInternal _CompleteCheckpointRequest_default_instance_;
class CompleteCheckpointResponse;
struct CompleteCheckpointResponseDefaultTypeInternal;
extern CompleteCheckpointResponseDefaultTypeInternal _CompleteCheckpointResponse_default_instance_;
class StartCheckpointingRequest;
struct StartCheckpointingRequestDefaultTypeInternal;
extern StartCheckpointingRequestDefaultTypeInternal _StartCheckpointingRequest_default_instance_;
class StartCheckpointingResponse;
struct StartCheckpointingResponseDefaultTypeInternal;
extern StartCheckpointingResponseDefaultTypeInternal _StartCheckpointingResponse_default_instance_;
}  // namespace checkpoint
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace checkpoint {

// ===================================================================


// -------------------------------------------------------------------

class StartCheckpointingResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:checkpoint.StartCheckpointingResponse) */ {
 public:
  inline StartCheckpointingResponse() : StartCheckpointingResponse(nullptr) {}
  ~StartCheckpointingResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartCheckpointingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartCheckpointingResponse(const StartCheckpointingResponse& from) : StartCheckpointingResponse(nullptr, from) {}
  inline StartCheckpointingResponse(StartCheckpointingResponse&& from) noexcept
      : StartCheckpointingResponse(nullptr, std::move(from)) {}
  inline StartCheckpointingResponse& operator=(const StartCheckpointingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartCheckpointingResponse& operator=(StartCheckpointingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartCheckpointingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartCheckpointingResponse* internal_default_instance() {
    return reinterpret_cast<const StartCheckpointingResponse*>(
        &_StartCheckpointingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StartCheckpointingResponse& a, StartCheckpointingResponse& b) { a.Swap(&b); }
  inline void Swap(StartCheckpointingResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartCheckpointingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartCheckpointingResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StartCheckpointingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartCheckpointingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartCheckpointingResponse& from) { StartCheckpointingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StartCheckpointingResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "checkpoint.StartCheckpointingResponse"; }

 protected:
  explicit StartCheckpointingResponse(::google::protobuf::Arena* arena);
  StartCheckpointingResponse(::google::protobuf::Arena* arena, const StartCheckpointingResponse& from);
  StartCheckpointingResponse(::google::protobuf::Arena* arena, StartCheckpointingResponse&& from) noexcept
      : StartCheckpointingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAckFieldNumber = 1,
  };
  // bool ack = 1;
  void clear_ack() ;
  bool ack() const;
  void set_ack(bool value);

  private:
  bool _internal_ack() const;
  void _internal_set_ack(bool value);

  public:
  // @@protoc_insertion_point(class_scope:checkpoint.StartCheckpointingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    bool ack_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_checkpoint_2eproto;
};
// -------------------------------------------------------------------

class StartCheckpointingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:checkpoint.StartCheckpointingRequest) */ {
 public:
  inline StartCheckpointingRequest() : StartCheckpointingRequest(nullptr) {}
  ~StartCheckpointingRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartCheckpointingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartCheckpointingRequest(const StartCheckpointingRequest& from) : StartCheckpointingRequest(nullptr, from) {}
  inline StartCheckpointingRequest(StartCheckpointingRequest&& from) noexcept
      : StartCheckpointingRequest(nullptr, std::move(from)) {}
  inline StartCheckpointingRequest& operator=(const StartCheckpointingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartCheckpointingRequest& operator=(StartCheckpointingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartCheckpointingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartCheckpointingRequest* internal_default_instance() {
    return reinterpret_cast<const StartCheckpointingRequest*>(
        &_StartCheckpointingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StartCheckpointingRequest& a, StartCheckpointingRequest& b) { a.Swap(&b); }
  inline void Swap(StartCheckpointingRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartCheckpointingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartCheckpointingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StartCheckpointingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartCheckpointingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartCheckpointingRequest& from) { StartCheckpointingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StartCheckpointingRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "checkpoint.StartCheckpointingRequest"; }

 protected:
  explicit StartCheckpointingRequest(::google::protobuf::Arena* arena);
  StartCheckpointingRequest(::google::protobuf::Arena* arena, const StartCheckpointingRequest& from);
  StartCheckpointingRequest(::google::protobuf::Arena* arena, StartCheckpointingRequest&& from) noexcept
      : StartCheckpointingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCheckpointVersionFieldNumber = 1,
  };
  // int64 checkpoint_version = 1;
  void clear_checkpoint_version() ;
  ::int64_t checkpoint_version() const;
  void set_checkpoint_version(::int64_t value);

  private:
  ::int64_t _internal_checkpoint_version() const;
  void _internal_set_checkpoint_version(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:checkpoint.StartCheckpointingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t checkpoint_version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_checkpoint_2eproto;
};
// -------------------------------------------------------------------

class CompleteCheckpointResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:checkpoint.CompleteCheckpointResponse) */ {
 public:
  inline CompleteCheckpointResponse() : CompleteCheckpointResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompleteCheckpointResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompleteCheckpointResponse(const CompleteCheckpointResponse& from) : CompleteCheckpointResponse(nullptr, from) {}
  inline CompleteCheckpointResponse(CompleteCheckpointResponse&& from) noexcept
      : CompleteCheckpointResponse(nullptr, std::move(from)) {}
  inline CompleteCheckpointResponse& operator=(const CompleteCheckpointResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompleteCheckpointResponse& operator=(CompleteCheckpointResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompleteCheckpointResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompleteCheckpointResponse* internal_default_instance() {
    return reinterpret_cast<const CompleteCheckpointResponse*>(
        &_CompleteCheckpointResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CompleteCheckpointResponse& a, CompleteCheckpointResponse& b) { a.Swap(&b); }
  inline void Swap(CompleteCheckpointResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompleteCheckpointResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompleteCheckpointResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CompleteCheckpointResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CompleteCheckpointResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CompleteCheckpointResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "checkpoint.CompleteCheckpointResponse"; }

 protected:
  explicit CompleteCheckpointResponse(::google::protobuf::Arena* arena);
  CompleteCheckpointResponse(::google::protobuf::Arena* arena, const CompleteCheckpointResponse& from);
  CompleteCheckpointResponse(::google::protobuf::Arena* arena, CompleteCheckpointResponse&& from) noexcept
      : CompleteCheckpointResponse(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:checkpoint.CompleteCheckpointResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_checkpoint_2eproto;
};
// -------------------------------------------------------------------

class CompleteCheckpointRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:checkpoint.CompleteCheckpointRequest) */ {
 public:
  inline CompleteCheckpointRequest() : CompleteCheckpointRequest(nullptr) {}
  ~CompleteCheckpointRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompleteCheckpointRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompleteCheckpointRequest(const CompleteCheckpointRequest& from) : CompleteCheckpointRequest(nullptr, from) {}
  inline CompleteCheckpointRequest(CompleteCheckpointRequest&& from) noexcept
      : CompleteCheckpointRequest(nullptr, std::move(from)) {}
  inline CompleteCheckpointRequest& operator=(const CompleteCheckpointRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompleteCheckpointRequest& operator=(CompleteCheckpointRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompleteCheckpointRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompleteCheckpointRequest* internal_default_instance() {
    return reinterpret_cast<const CompleteCheckpointRequest*>(
        &_CompleteCheckpointRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CompleteCheckpointRequest& a, CompleteCheckpointRequest& b) { a.Swap(&b); }
  inline void Swap(CompleteCheckpointRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompleteCheckpointRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompleteCheckpointRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CompleteCheckpointRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompleteCheckpointRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompleteCheckpointRequest& from) { CompleteCheckpointRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompleteCheckpointRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "checkpoint.CompleteCheckpointRequest"; }

 protected:
  explicit CompleteCheckpointRequest(::google::protobuf::Arena* arena);
  CompleteCheckpointRequest(::google::protobuf::Arena* arena, const CompleteCheckpointRequest& from);
  CompleteCheckpointRequest(::google::protobuf::Arena* arena, CompleteCheckpointRequest&& from) noexcept
      : CompleteCheckpointRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCheckpointVersionFieldNumber = 1,
  };
  // int64 checkpoint_version = 1;
  void clear_checkpoint_version() ;
  ::int64_t checkpoint_version() const;
  void set_checkpoint_version(::int64_t value);

  private:
  ::int64_t _internal_checkpoint_version() const;
  void _internal_set_checkpoint_version(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:checkpoint.CompleteCheckpointRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t checkpoint_version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_checkpoint_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StartCheckpointingRequest

// int64 checkpoint_version = 1;
inline void StartCheckpointingRequest::clear_checkpoint_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.checkpoint_version_ = ::int64_t{0};
}
inline ::int64_t StartCheckpointingRequest::checkpoint_version() const {
  // @@protoc_insertion_point(field_get:checkpoint.StartCheckpointingRequest.checkpoint_version)
  return _internal_checkpoint_version();
}
inline void StartCheckpointingRequest::set_checkpoint_version(::int64_t value) {
  _internal_set_checkpoint_version(value);
  // @@protoc_insertion_point(field_set:checkpoint.StartCheckpointingRequest.checkpoint_version)
}
inline ::int64_t StartCheckpointingRequest::_internal_checkpoint_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.checkpoint_version_;
}
inline void StartCheckpointingRequest::_internal_set_checkpoint_version(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.checkpoint_version_ = value;
}

// -------------------------------------------------------------------

// StartCheckpointingResponse

// bool ack = 1;
inline void StartCheckpointingResponse::clear_ack() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ack_ = false;
}
inline bool StartCheckpointingResponse::ack() const {
  // @@protoc_insertion_point(field_get:checkpoint.StartCheckpointingResponse.ack)
  return _internal_ack();
}
inline void StartCheckpointingResponse::set_ack(bool value) {
  _internal_set_ack(value);
  // @@protoc_insertion_point(field_set:checkpoint.StartCheckpointingResponse.ack)
}
inline bool StartCheckpointingResponse::_internal_ack() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ack_;
}
inline void StartCheckpointingResponse::_internal_set_ack(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ack_ = value;
}

// -------------------------------------------------------------------

// CompleteCheckpointRequest

// int64 checkpoint_version = 1;
inline void CompleteCheckpointRequest::clear_checkpoint_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.checkpoint_version_ = ::int64_t{0};
}
inline ::int64_t CompleteCheckpointRequest::checkpoint_version() const {
  // @@protoc_insertion_point(field_get:checkpoint.CompleteCheckpointRequest.checkpoint_version)
  return _internal_checkpoint_version();
}
inline void CompleteCheckpointRequest::set_checkpoint_version(::int64_t value) {
  _internal_set_checkpoint_version(value);
  // @@protoc_insertion_point(field_set:checkpoint.CompleteCheckpointRequest.checkpoint_version)
}
inline ::int64_t CompleteCheckpointRequest::_internal_checkpoint_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.checkpoint_version_;
}
inline void CompleteCheckpointRequest::_internal_set_checkpoint_version(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.checkpoint_version_ = value;
}

// -------------------------------------------------------------------

// CompleteCheckpointResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace checkpoint


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_checkpoint_2eproto_2epb_2eh
