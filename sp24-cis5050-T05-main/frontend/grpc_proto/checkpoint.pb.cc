// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: checkpoint.proto
// Protobuf C++ Version: 5.26.1

#include "checkpoint.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace checkpoint {

inline constexpr StartCheckpointingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ack_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartCheckpointingResponse::StartCheckpointingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartCheckpointingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartCheckpointingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartCheckpointingResponseDefaultTypeInternal() {}
  union {
    StartCheckpointingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartCheckpointingResponseDefaultTypeInternal _StartCheckpointingResponse_default_instance_;

inline constexpr StartCheckpointingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : checkpoint_version_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartCheckpointingRequest::StartCheckpointingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartCheckpointingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartCheckpointingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartCheckpointingRequestDefaultTypeInternal() {}
  union {
    StartCheckpointingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartCheckpointingRequestDefaultTypeInternal _StartCheckpointingRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CompleteCheckpointResponse::CompleteCheckpointResponse(::_pbi::ConstantInitialized) {}
struct CompleteCheckpointResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompleteCheckpointResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompleteCheckpointResponseDefaultTypeInternal() {}
  union {
    CompleteCheckpointResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompleteCheckpointResponseDefaultTypeInternal _CompleteCheckpointResponse_default_instance_;

inline constexpr CompleteCheckpointRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : checkpoint_version_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CompleteCheckpointRequest::CompleteCheckpointRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CompleteCheckpointRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompleteCheckpointRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompleteCheckpointRequestDefaultTypeInternal() {}
  union {
    CompleteCheckpointRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompleteCheckpointRequestDefaultTypeInternal _CompleteCheckpointRequest_default_instance_;
}  // namespace checkpoint
static ::_pb::Metadata file_level_metadata_checkpoint_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_checkpoint_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_checkpoint_2eproto = nullptr;
const ::uint32_t
    TableStruct_checkpoint_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::checkpoint::StartCheckpointingRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::checkpoint::StartCheckpointingRequest, _impl_.checkpoint_version_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::checkpoint::StartCheckpointingResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::checkpoint::StartCheckpointingResponse, _impl_.ack_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::checkpoint::CompleteCheckpointRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::checkpoint::CompleteCheckpointRequest, _impl_.checkpoint_version_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::checkpoint::CompleteCheckpointResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::checkpoint::StartCheckpointingRequest)},
        {9, -1, -1, sizeof(::checkpoint::StartCheckpointingResponse)},
        {18, -1, -1, sizeof(::checkpoint::CompleteCheckpointRequest)},
        {27, -1, -1, sizeof(::checkpoint::CompleteCheckpointResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::checkpoint::_StartCheckpointingRequest_default_instance_._instance,
    &::checkpoint::_StartCheckpointingResponse_default_instance_._instance,
    &::checkpoint::_CompleteCheckpointRequest_default_instance_._instance,
    &::checkpoint::_CompleteCheckpointResponse_default_instance_._instance,
};
const char descriptor_table_protodef_checkpoint_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020checkpoint.proto\022\ncheckpoint\"7\n\031StartC"
    "heckpointingRequest\022\032\n\022checkpoint_versio"
    "n\030\001 \001(\003\")\n\032StartCheckpointingResponse\022\013\n"
    "\003ack\030\001 \001(\010\"7\n\031CompleteCheckpointRequest\022"
    "\032\n\022checkpoint_version\030\001 \001(\003\"\034\n\032CompleteC"
    "heckpointResponse2\335\001\n\021CheckpointService\022"
    "c\n\022StartCheckpointing\022%.checkpoint.Start"
    "CheckpointingRequest\032&.checkpoint.StartC"
    "heckpointingResponse\022c\n\022CompleteCheckpoi"
    "nt\022%.checkpoint.CompleteCheckpointReques"
    "t\032&.checkpoint.CompleteCheckpointRespons"
    "eb\006proto3"
};
static ::absl::once_flag descriptor_table_checkpoint_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_checkpoint_2eproto = {
    false,
    false,
    449,
    descriptor_table_protodef_checkpoint_2eproto,
    "checkpoint.proto",
    &descriptor_table_checkpoint_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_checkpoint_2eproto::offsets,
    file_level_metadata_checkpoint_2eproto,
    file_level_enum_descriptors_checkpoint_2eproto,
    file_level_service_descriptors_checkpoint_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_checkpoint_2eproto_getter() {
  return &descriptor_table_checkpoint_2eproto;
}
namespace checkpoint {
// ===================================================================

class StartCheckpointingRequest::_Internal {
 public:
};

StartCheckpointingRequest::StartCheckpointingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:checkpoint.StartCheckpointingRequest)
}
StartCheckpointingRequest::StartCheckpointingRequest(
    ::google::protobuf::Arena* arena, const StartCheckpointingRequest& from)
    : StartCheckpointingRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StartCheckpointingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartCheckpointingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.checkpoint_version_ = {};
}
StartCheckpointingRequest::~StartCheckpointingRequest() {
  // @@protoc_insertion_point(destructor:checkpoint.StartCheckpointingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartCheckpointingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StartCheckpointingRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(StartCheckpointingRequest, _impl_._cached_size_),
              false,
          },
          &StartCheckpointingRequest::MergeImpl,
          &StartCheckpointingRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void StartCheckpointingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:checkpoint.StartCheckpointingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.checkpoint_version_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartCheckpointingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StartCheckpointingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartCheckpointingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::checkpoint::StartCheckpointingRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 checkpoint_version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StartCheckpointingRequest, _impl_.checkpoint_version_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StartCheckpointingRequest, _impl_.checkpoint_version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 checkpoint_version = 1;
    {PROTOBUF_FIELD_OFFSET(StartCheckpointingRequest, _impl_.checkpoint_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StartCheckpointingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:checkpoint.StartCheckpointingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 checkpoint_version = 1;
  if (this->_internal_checkpoint_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_checkpoint_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:checkpoint.StartCheckpointingRequest)
  return target;
}

::size_t StartCheckpointingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:checkpoint.StartCheckpointingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 checkpoint_version = 1;
  if (this->_internal_checkpoint_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_checkpoint_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StartCheckpointingRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StartCheckpointingRequest*>(&to_msg);
  auto& from = static_cast<const StartCheckpointingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:checkpoint.StartCheckpointingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_checkpoint_version() != 0) {
    _this->_impl_.checkpoint_version_ = from._impl_.checkpoint_version_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartCheckpointingRequest::CopyFrom(const StartCheckpointingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:checkpoint.StartCheckpointingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartCheckpointingRequest::IsInitialized() const {
  return true;
}

void StartCheckpointingRequest::InternalSwap(StartCheckpointingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.checkpoint_version_, other->_impl_.checkpoint_version_);
}

::google::protobuf::Metadata StartCheckpointingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_checkpoint_2eproto_getter,
                                   &descriptor_table_checkpoint_2eproto_once,
                                   file_level_metadata_checkpoint_2eproto[0]);
}
// ===================================================================

class StartCheckpointingResponse::_Internal {
 public:
};

StartCheckpointingResponse::StartCheckpointingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:checkpoint.StartCheckpointingResponse)
}
StartCheckpointingResponse::StartCheckpointingResponse(
    ::google::protobuf::Arena* arena, const StartCheckpointingResponse& from)
    : StartCheckpointingResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StartCheckpointingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartCheckpointingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ack_ = {};
}
StartCheckpointingResponse::~StartCheckpointingResponse() {
  // @@protoc_insertion_point(destructor:checkpoint.StartCheckpointingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartCheckpointingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StartCheckpointingResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(StartCheckpointingResponse, _impl_._cached_size_),
              false,
          },
          &StartCheckpointingResponse::MergeImpl,
          &StartCheckpointingResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void StartCheckpointingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:checkpoint.StartCheckpointingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ack_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartCheckpointingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StartCheckpointingResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartCheckpointingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::checkpoint::StartCheckpointingResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool ack = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StartCheckpointingResponse, _impl_.ack_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StartCheckpointingResponse, _impl_.ack_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool ack = 1;
    {PROTOBUF_FIELD_OFFSET(StartCheckpointingResponse, _impl_.ack_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StartCheckpointingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:checkpoint.StartCheckpointingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool ack = 1;
  if (this->_internal_ack() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_ack(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:checkpoint.StartCheckpointingResponse)
  return target;
}

::size_t StartCheckpointingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:checkpoint.StartCheckpointingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ack = 1;
  if (this->_internal_ack() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StartCheckpointingResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StartCheckpointingResponse*>(&to_msg);
  auto& from = static_cast<const StartCheckpointingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:checkpoint.StartCheckpointingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ack() != 0) {
    _this->_impl_.ack_ = from._impl_.ack_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartCheckpointingResponse::CopyFrom(const StartCheckpointingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:checkpoint.StartCheckpointingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartCheckpointingResponse::IsInitialized() const {
  return true;
}

void StartCheckpointingResponse::InternalSwap(StartCheckpointingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.ack_, other->_impl_.ack_);
}

::google::protobuf::Metadata StartCheckpointingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_checkpoint_2eproto_getter,
                                   &descriptor_table_checkpoint_2eproto_once,
                                   file_level_metadata_checkpoint_2eproto[1]);
}
// ===================================================================

class CompleteCheckpointRequest::_Internal {
 public:
};

CompleteCheckpointRequest::CompleteCheckpointRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:checkpoint.CompleteCheckpointRequest)
}
CompleteCheckpointRequest::CompleteCheckpointRequest(
    ::google::protobuf::Arena* arena, const CompleteCheckpointRequest& from)
    : CompleteCheckpointRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CompleteCheckpointRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CompleteCheckpointRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.checkpoint_version_ = {};
}
CompleteCheckpointRequest::~CompleteCheckpointRequest() {
  // @@protoc_insertion_point(destructor:checkpoint.CompleteCheckpointRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CompleteCheckpointRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CompleteCheckpointRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CompleteCheckpointRequest, _impl_._cached_size_),
              false,
          },
          &CompleteCheckpointRequest::MergeImpl,
          &CompleteCheckpointRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CompleteCheckpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:checkpoint.CompleteCheckpointRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.checkpoint_version_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CompleteCheckpointRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CompleteCheckpointRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CompleteCheckpointRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::checkpoint::CompleteCheckpointRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 checkpoint_version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CompleteCheckpointRequest, _impl_.checkpoint_version_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CompleteCheckpointRequest, _impl_.checkpoint_version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 checkpoint_version = 1;
    {PROTOBUF_FIELD_OFFSET(CompleteCheckpointRequest, _impl_.checkpoint_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CompleteCheckpointRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:checkpoint.CompleteCheckpointRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 checkpoint_version = 1;
  if (this->_internal_checkpoint_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_checkpoint_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:checkpoint.CompleteCheckpointRequest)
  return target;
}

::size_t CompleteCheckpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:checkpoint.CompleteCheckpointRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 checkpoint_version = 1;
  if (this->_internal_checkpoint_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_checkpoint_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CompleteCheckpointRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CompleteCheckpointRequest*>(&to_msg);
  auto& from = static_cast<const CompleteCheckpointRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:checkpoint.CompleteCheckpointRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_checkpoint_version() != 0) {
    _this->_impl_.checkpoint_version_ = from._impl_.checkpoint_version_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompleteCheckpointRequest::CopyFrom(const CompleteCheckpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:checkpoint.CompleteCheckpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CompleteCheckpointRequest::IsInitialized() const {
  return true;
}

void CompleteCheckpointRequest::InternalSwap(CompleteCheckpointRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.checkpoint_version_, other->_impl_.checkpoint_version_);
}

::google::protobuf::Metadata CompleteCheckpointRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_checkpoint_2eproto_getter,
                                   &descriptor_table_checkpoint_2eproto_once,
                                   file_level_metadata_checkpoint_2eproto[2]);
}
// ===================================================================

class CompleteCheckpointResponse::_Internal {
 public:
};

CompleteCheckpointResponse::CompleteCheckpointResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:checkpoint.CompleteCheckpointResponse)
}
CompleteCheckpointResponse::CompleteCheckpointResponse(
    ::google::protobuf::Arena* arena,
    const CompleteCheckpointResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CompleteCheckpointResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:checkpoint.CompleteCheckpointResponse)
}









::google::protobuf::Metadata CompleteCheckpointResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_checkpoint_2eproto_getter,
                                   &descriptor_table_checkpoint_2eproto_once,
                                   file_level_metadata_checkpoint_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace checkpoint
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_checkpoint_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
