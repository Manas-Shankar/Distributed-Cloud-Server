// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kv_lifecycle.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_kv_5flifecycle_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_kv_5flifecycle_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kv_5flifecycle_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kv_5flifecycle_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kv_5flifecycle_2eproto;
namespace kvstore {
class ActiveNodesRequest;
struct ActiveNodesRequestDefaultTypeInternal;
extern ActiveNodesRequestDefaultTypeInternal _ActiveNodesRequest_default_instance_;
class ActiveNodesResponse;
struct ActiveNodesResponseDefaultTypeInternal;
extern ActiveNodesResponseDefaultTypeInternal _ActiveNodesResponse_default_instance_;
class HealthCheckRequest;
struct HealthCheckRequestDefaultTypeInternal;
extern HealthCheckRequestDefaultTypeInternal _HealthCheckRequest_default_instance_;
class HealthCheckResponse;
struct HealthCheckResponseDefaultTypeInternal;
extern HealthCheckResponseDefaultTypeInternal _HealthCheckResponse_default_instance_;
class RestartRequest;
struct RestartRequestDefaultTypeInternal;
extern RestartRequestDefaultTypeInternal _RestartRequest_default_instance_;
class RestartResponse;
struct RestartResponseDefaultTypeInternal;
extern RestartResponseDefaultTypeInternal _RestartResponse_default_instance_;
class SetPrimaryRequest;
struct SetPrimaryRequestDefaultTypeInternal;
extern SetPrimaryRequestDefaultTypeInternal _SetPrimaryRequest_default_instance_;
class SetPrimaryResponse;
struct SetPrimaryResponseDefaultTypeInternal;
extern SetPrimaryResponseDefaultTypeInternal _SetPrimaryResponse_default_instance_;
class ShutdownRequest;
struct ShutdownRequestDefaultTypeInternal;
extern ShutdownRequestDefaultTypeInternal _ShutdownRequest_default_instance_;
class ShutdownResponse;
struct ShutdownResponseDefaultTypeInternal;
extern ShutdownResponseDefaultTypeInternal _ShutdownResponse_default_instance_;
}  // namespace kvstore
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kvstore {

// ===================================================================


// -------------------------------------------------------------------

class ShutdownResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kvstore.ShutdownResponse) */ {
 public:
  inline ShutdownResponse() : ShutdownResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShutdownResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShutdownResponse(const ShutdownResponse& from) : ShutdownResponse(nullptr, from) {}
  inline ShutdownResponse(ShutdownResponse&& from) noexcept
      : ShutdownResponse(nullptr, std::move(from)) {}
  inline ShutdownResponse& operator=(const ShutdownResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShutdownResponse& operator=(ShutdownResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShutdownResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShutdownResponse* internal_default_instance() {
    return reinterpret_cast<const ShutdownResponse*>(
        &_ShutdownResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ShutdownResponse& a, ShutdownResponse& b) { a.Swap(&b); }
  inline void Swap(ShutdownResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShutdownResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShutdownResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ShutdownResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ShutdownResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ShutdownResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.ShutdownResponse"; }

 protected:
  explicit ShutdownResponse(::google::protobuf::Arena* arena);
  ShutdownResponse(::google::protobuf::Arena* arena, const ShutdownResponse& from);
  ShutdownResponse(::google::protobuf::Arena* arena, ShutdownResponse&& from) noexcept
      : ShutdownResponse(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kvstore.ShutdownResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};
// -------------------------------------------------------------------

class ShutdownRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kvstore.ShutdownRequest) */ {
 public:
  inline ShutdownRequest() : ShutdownRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShutdownRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShutdownRequest(const ShutdownRequest& from) : ShutdownRequest(nullptr, from) {}
  inline ShutdownRequest(ShutdownRequest&& from) noexcept
      : ShutdownRequest(nullptr, std::move(from)) {}
  inline ShutdownRequest& operator=(const ShutdownRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShutdownRequest& operator=(ShutdownRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShutdownRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShutdownRequest* internal_default_instance() {
    return reinterpret_cast<const ShutdownRequest*>(
        &_ShutdownRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ShutdownRequest& a, ShutdownRequest& b) { a.Swap(&b); }
  inline void Swap(ShutdownRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShutdownRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShutdownRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ShutdownRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ShutdownRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ShutdownRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.ShutdownRequest"; }

 protected:
  explicit ShutdownRequest(::google::protobuf::Arena* arena);
  ShutdownRequest(::google::protobuf::Arena* arena, const ShutdownRequest& from);
  ShutdownRequest(::google::protobuf::Arena* arena, ShutdownRequest&& from) noexcept
      : ShutdownRequest(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kvstore.ShutdownRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};
// -------------------------------------------------------------------

class SetPrimaryResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kvstore.SetPrimaryResponse) */ {
 public:
  inline SetPrimaryResponse() : SetPrimaryResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetPrimaryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetPrimaryResponse(const SetPrimaryResponse& from) : SetPrimaryResponse(nullptr, from) {}
  inline SetPrimaryResponse(SetPrimaryResponse&& from) noexcept
      : SetPrimaryResponse(nullptr, std::move(from)) {}
  inline SetPrimaryResponse& operator=(const SetPrimaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPrimaryResponse& operator=(SetPrimaryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPrimaryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPrimaryResponse* internal_default_instance() {
    return reinterpret_cast<const SetPrimaryResponse*>(
        &_SetPrimaryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SetPrimaryResponse& a, SetPrimaryResponse& b) { a.Swap(&b); }
  inline void Swap(SetPrimaryResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPrimaryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPrimaryResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SetPrimaryResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetPrimaryResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetPrimaryResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.SetPrimaryResponse"; }

 protected:
  explicit SetPrimaryResponse(::google::protobuf::Arena* arena);
  SetPrimaryResponse(::google::protobuf::Arena* arena, const SetPrimaryResponse& from);
  SetPrimaryResponse(::google::protobuf::Arena* arena, SetPrimaryResponse&& from) noexcept
      : SetPrimaryResponse(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kvstore.SetPrimaryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};
// -------------------------------------------------------------------

class SetPrimaryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kvstore.SetPrimaryRequest) */ {
 public:
  inline SetPrimaryRequest() : SetPrimaryRequest(nullptr) {}
  ~SetPrimaryRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetPrimaryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetPrimaryRequest(const SetPrimaryRequest& from) : SetPrimaryRequest(nullptr, from) {}
  inline SetPrimaryRequest(SetPrimaryRequest&& from) noexcept
      : SetPrimaryRequest(nullptr, std::move(from)) {}
  inline SetPrimaryRequest& operator=(const SetPrimaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPrimaryRequest& operator=(SetPrimaryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPrimaryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPrimaryRequest* internal_default_instance() {
    return reinterpret_cast<const SetPrimaryRequest*>(
        &_SetPrimaryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SetPrimaryRequest& a, SetPrimaryRequest& b) { a.Swap(&b); }
  inline void Swap(SetPrimaryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPrimaryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPrimaryRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SetPrimaryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPrimaryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetPrimaryRequest& from) { SetPrimaryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetPrimaryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.SetPrimaryRequest"; }

 protected:
  explicit SetPrimaryRequest(::google::protobuf::Arena* arena);
  SetPrimaryRequest(::google::protobuf::Arena* arena, const SetPrimaryRequest& from);
  SetPrimaryRequest(::google::protobuf::Arena* arena, SetPrimaryRequest&& from) noexcept
      : SetPrimaryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPrimaryAddressFieldNumber = 1,
  };
  // string primaryAddress = 1;
  void clear_primaryaddress() ;
  const std::string& primaryaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_primaryaddress(Arg_&& arg, Args_... args);
  std::string* mutable_primaryaddress();
  PROTOBUF_NODISCARD std::string* release_primaryaddress();
  void set_allocated_primaryaddress(std::string* value);

  private:
  const std::string& _internal_primaryaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_primaryaddress(
      const std::string& value);
  std::string* _internal_mutable_primaryaddress();

  public:
  // @@protoc_insertion_point(class_scope:kvstore.SetPrimaryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr primaryaddress_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};
// -------------------------------------------------------------------

class RestartResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kvstore.RestartResponse) */ {
 public:
  inline RestartResponse() : RestartResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RestartResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RestartResponse(const RestartResponse& from) : RestartResponse(nullptr, from) {}
  inline RestartResponse(RestartResponse&& from) noexcept
      : RestartResponse(nullptr, std::move(from)) {}
  inline RestartResponse& operator=(const RestartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RestartResponse& operator=(RestartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RestartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RestartResponse* internal_default_instance() {
    return reinterpret_cast<const RestartResponse*>(
        &_RestartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(RestartResponse& a, RestartResponse& b) { a.Swap(&b); }
  inline void Swap(RestartResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RestartResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RestartResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RestartResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RestartResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RestartResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.RestartResponse"; }

 protected:
  explicit RestartResponse(::google::protobuf::Arena* arena);
  RestartResponse(::google::protobuf::Arena* arena, const RestartResponse& from);
  RestartResponse(::google::protobuf::Arena* arena, RestartResponse&& from) noexcept
      : RestartResponse(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kvstore.RestartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};
// -------------------------------------------------------------------

class RestartRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kvstore.RestartRequest) */ {
 public:
  inline RestartRequest() : RestartRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RestartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RestartRequest(const RestartRequest& from) : RestartRequest(nullptr, from) {}
  inline RestartRequest(RestartRequest&& from) noexcept
      : RestartRequest(nullptr, std::move(from)) {}
  inline RestartRequest& operator=(const RestartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RestartRequest& operator=(RestartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RestartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RestartRequest* internal_default_instance() {
    return reinterpret_cast<const RestartRequest*>(
        &_RestartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RestartRequest& a, RestartRequest& b) { a.Swap(&b); }
  inline void Swap(RestartRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RestartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RestartRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RestartRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RestartRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RestartRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.RestartRequest"; }

 protected:
  explicit RestartRequest(::google::protobuf::Arena* arena);
  RestartRequest(::google::protobuf::Arena* arena, const RestartRequest& from);
  RestartRequest(::google::protobuf::Arena* arena, RestartRequest&& from) noexcept
      : RestartRequest(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kvstore.RestartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};
// -------------------------------------------------------------------

class HealthCheckResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kvstore.HealthCheckResponse) */ {
 public:
  inline HealthCheckResponse() : HealthCheckResponse(nullptr) {}
  ~HealthCheckResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HealthCheckResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline HealthCheckResponse(const HealthCheckResponse& from) : HealthCheckResponse(nullptr, from) {}
  inline HealthCheckResponse(HealthCheckResponse&& from) noexcept
      : HealthCheckResponse(nullptr, std::move(from)) {}
  inline HealthCheckResponse& operator=(const HealthCheckResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HealthCheckResponse& operator=(HealthCheckResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HealthCheckResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const HealthCheckResponse* internal_default_instance() {
    return reinterpret_cast<const HealthCheckResponse*>(
        &_HealthCheckResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(HealthCheckResponse& a, HealthCheckResponse& b) { a.Swap(&b); }
  inline void Swap(HealthCheckResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HealthCheckResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HealthCheckResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HealthCheckResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HealthCheckResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HealthCheckResponse& from) { HealthCheckResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HealthCheckResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.HealthCheckResponse"; }

 protected:
  explicit HealthCheckResponse(::google::protobuf::Arena* arena);
  HealthCheckResponse(::google::protobuf::Arena* arena, const HealthCheckResponse& from);
  HealthCheckResponse(::google::protobuf::Arena* arena, HealthCheckResponse&& from) noexcept
      : HealthCheckResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecoveryStatusFieldNumber = 2,
    kIsHealthyFieldNumber = 1,
  };
  // string recovery_status = 2;
  void clear_recovery_status() ;
  const std::string& recovery_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recovery_status(Arg_&& arg, Args_... args);
  std::string* mutable_recovery_status();
  PROTOBUF_NODISCARD std::string* release_recovery_status();
  void set_allocated_recovery_status(std::string* value);

  private:
  const std::string& _internal_recovery_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recovery_status(
      const std::string& value);
  std::string* _internal_mutable_recovery_status();

  public:
  // bool isHealthy = 1;
  void clear_ishealthy() ;
  bool ishealthy() const;
  void set_ishealthy(bool value);

  private:
  bool _internal_ishealthy() const;
  void _internal_set_ishealthy(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kvstore.HealthCheckResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr recovery_status_;
    bool ishealthy_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};
// -------------------------------------------------------------------

class HealthCheckRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kvstore.HealthCheckRequest) */ {
 public:
  inline HealthCheckRequest() : HealthCheckRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HealthCheckRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline HealthCheckRequest(const HealthCheckRequest& from) : HealthCheckRequest(nullptr, from) {}
  inline HealthCheckRequest(HealthCheckRequest&& from) noexcept
      : HealthCheckRequest(nullptr, std::move(from)) {}
  inline HealthCheckRequest& operator=(const HealthCheckRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HealthCheckRequest& operator=(HealthCheckRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HealthCheckRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HealthCheckRequest* internal_default_instance() {
    return reinterpret_cast<const HealthCheckRequest*>(
        &_HealthCheckRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(HealthCheckRequest& a, HealthCheckRequest& b) { a.Swap(&b); }
  inline void Swap(HealthCheckRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HealthCheckRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HealthCheckRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<HealthCheckRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const HealthCheckRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const HealthCheckRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.HealthCheckRequest"; }

 protected:
  explicit HealthCheckRequest(::google::protobuf::Arena* arena);
  HealthCheckRequest(::google::protobuf::Arena* arena, const HealthCheckRequest& from);
  HealthCheckRequest(::google::protobuf::Arena* arena, HealthCheckRequest&& from) noexcept
      : HealthCheckRequest(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kvstore.HealthCheckRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};
// -------------------------------------------------------------------

class ActiveNodesResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kvstore.ActiveNodesResponse) */ {
 public:
  inline ActiveNodesResponse() : ActiveNodesResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActiveNodesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActiveNodesResponse(const ActiveNodesResponse& from) : ActiveNodesResponse(nullptr, from) {}
  inline ActiveNodesResponse(ActiveNodesResponse&& from) noexcept
      : ActiveNodesResponse(nullptr, std::move(from)) {}
  inline ActiveNodesResponse& operator=(const ActiveNodesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActiveNodesResponse& operator=(ActiveNodesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActiveNodesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActiveNodesResponse* internal_default_instance() {
    return reinterpret_cast<const ActiveNodesResponse*>(
        &_ActiveNodesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ActiveNodesResponse& a, ActiveNodesResponse& b) { a.Swap(&b); }
  inline void Swap(ActiveNodesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActiveNodesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActiveNodesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ActiveNodesResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ActiveNodesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ActiveNodesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.ActiveNodesResponse"; }

 protected:
  explicit ActiveNodesResponse(::google::protobuf::Arena* arena);
  ActiveNodesResponse(::google::protobuf::Arena* arena, const ActiveNodesResponse& from);
  ActiveNodesResponse(::google::protobuf::Arena* arena, ActiveNodesResponse&& from) noexcept
      : ActiveNodesResponse(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kvstore.ActiveNodesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};
// -------------------------------------------------------------------

class ActiveNodesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kvstore.ActiveNodesRequest) */ {
 public:
  inline ActiveNodesRequest() : ActiveNodesRequest(nullptr) {}
  ~ActiveNodesRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActiveNodesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActiveNodesRequest(const ActiveNodesRequest& from) : ActiveNodesRequest(nullptr, from) {}
  inline ActiveNodesRequest(ActiveNodesRequest&& from) noexcept
      : ActiveNodesRequest(nullptr, std::move(from)) {}
  inline ActiveNodesRequest& operator=(const ActiveNodesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActiveNodesRequest& operator=(ActiveNodesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActiveNodesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActiveNodesRequest* internal_default_instance() {
    return reinterpret_cast<const ActiveNodesRequest*>(
        &_ActiveNodesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ActiveNodesRequest& a, ActiveNodesRequest& b) { a.Swap(&b); }
  inline void Swap(ActiveNodesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActiveNodesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActiveNodesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ActiveNodesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActiveNodesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActiveNodesRequest& from) { ActiveNodesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ActiveNodesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kvstore.ActiveNodesRequest"; }

 protected:
  explicit ActiveNodesRequest(::google::protobuf::Arena* arena);
  ActiveNodesRequest(::google::protobuf::Arena* arena, const ActiveNodesRequest& from);
  ActiveNodesRequest(::google::protobuf::Arena* arena, ActiveNodesRequest&& from) noexcept
      : ActiveNodesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeAddressesFieldNumber = 1,
  };
  // repeated string nodeAddresses = 1;
  int nodeaddresses_size() const;
  private:
  int _internal_nodeaddresses_size() const;

  public:
  void clear_nodeaddresses() ;
  const std::string& nodeaddresses(int index) const;
  std::string* mutable_nodeaddresses(int index);
  void set_nodeaddresses(int index, const std::string& value);
  void set_nodeaddresses(int index, std::string&& value);
  void set_nodeaddresses(int index, const char* value);
  void set_nodeaddresses(int index, const char* value, std::size_t size);
  void set_nodeaddresses(int index, absl::string_view value);
  std::string* add_nodeaddresses();
  void add_nodeaddresses(const std::string& value);
  void add_nodeaddresses(std::string&& value);
  void add_nodeaddresses(const char* value);
  void add_nodeaddresses(const char* value, std::size_t size);
  void add_nodeaddresses(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& nodeaddresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_nodeaddresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_nodeaddresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_nodeaddresses();

  public:
  // @@protoc_insertion_point(class_scope:kvstore.ActiveNodesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> nodeaddresses_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kv_5flifecycle_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ShutdownRequest

// -------------------------------------------------------------------

// ShutdownResponse

// -------------------------------------------------------------------

// RestartRequest

// -------------------------------------------------------------------

// RestartResponse

// -------------------------------------------------------------------

// HealthCheckRequest

// -------------------------------------------------------------------

// HealthCheckResponse

// bool isHealthy = 1;
inline void HealthCheckResponse::clear_ishealthy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ishealthy_ = false;
}
inline bool HealthCheckResponse::ishealthy() const {
  // @@protoc_insertion_point(field_get:kvstore.HealthCheckResponse.isHealthy)
  return _internal_ishealthy();
}
inline void HealthCheckResponse::set_ishealthy(bool value) {
  _internal_set_ishealthy(value);
  // @@protoc_insertion_point(field_set:kvstore.HealthCheckResponse.isHealthy)
}
inline bool HealthCheckResponse::_internal_ishealthy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ishealthy_;
}
inline void HealthCheckResponse::_internal_set_ishealthy(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ishealthy_ = value;
}

// string recovery_status = 2;
inline void HealthCheckResponse::clear_recovery_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.recovery_status_.ClearToEmpty();
}
inline const std::string& HealthCheckResponse::recovery_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kvstore.HealthCheckResponse.recovery_status)
  return _internal_recovery_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HealthCheckResponse::set_recovery_status(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.recovery_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kvstore.HealthCheckResponse.recovery_status)
}
inline std::string* HealthCheckResponse::mutable_recovery_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recovery_status();
  // @@protoc_insertion_point(field_mutable:kvstore.HealthCheckResponse.recovery_status)
  return _s;
}
inline const std::string& HealthCheckResponse::_internal_recovery_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.recovery_status_.Get();
}
inline void HealthCheckResponse::_internal_set_recovery_status(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.recovery_status_.Set(value, GetArena());
}
inline std::string* HealthCheckResponse::_internal_mutable_recovery_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.recovery_status_.Mutable( GetArena());
}
inline std::string* HealthCheckResponse::release_recovery_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:kvstore.HealthCheckResponse.recovery_status)
  return _impl_.recovery_status_.Release();
}
inline void HealthCheckResponse::set_allocated_recovery_status(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.recovery_status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.recovery_status_.IsDefault()) {
          _impl_.recovery_status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:kvstore.HealthCheckResponse.recovery_status)
}

// -------------------------------------------------------------------

// SetPrimaryRequest

// string primaryAddress = 1;
inline void SetPrimaryRequest::clear_primaryaddress() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.primaryaddress_.ClearToEmpty();
}
inline const std::string& SetPrimaryRequest::primaryaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kvstore.SetPrimaryRequest.primaryAddress)
  return _internal_primaryaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetPrimaryRequest::set_primaryaddress(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.primaryaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kvstore.SetPrimaryRequest.primaryAddress)
}
inline std::string* SetPrimaryRequest::mutable_primaryaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_primaryaddress();
  // @@protoc_insertion_point(field_mutable:kvstore.SetPrimaryRequest.primaryAddress)
  return _s;
}
inline const std::string& SetPrimaryRequest::_internal_primaryaddress() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.primaryaddress_.Get();
}
inline void SetPrimaryRequest::_internal_set_primaryaddress(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.primaryaddress_.Set(value, GetArena());
}
inline std::string* SetPrimaryRequest::_internal_mutable_primaryaddress() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.primaryaddress_.Mutable( GetArena());
}
inline std::string* SetPrimaryRequest::release_primaryaddress() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:kvstore.SetPrimaryRequest.primaryAddress)
  return _impl_.primaryaddress_.Release();
}
inline void SetPrimaryRequest::set_allocated_primaryaddress(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.primaryaddress_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.primaryaddress_.IsDefault()) {
          _impl_.primaryaddress_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:kvstore.SetPrimaryRequest.primaryAddress)
}

// -------------------------------------------------------------------

// SetPrimaryResponse

// -------------------------------------------------------------------

// ActiveNodesRequest

// repeated string nodeAddresses = 1;
inline int ActiveNodesRequest::_internal_nodeaddresses_size() const {
  return _internal_nodeaddresses().size();
}
inline int ActiveNodesRequest::nodeaddresses_size() const {
  return _internal_nodeaddresses_size();
}
inline void ActiveNodesRequest::clear_nodeaddresses() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nodeaddresses_.Clear();
}
inline std::string* ActiveNodesRequest::add_nodeaddresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_nodeaddresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:kvstore.ActiveNodesRequest.nodeAddresses)
  return _s;
}
inline const std::string& ActiveNodesRequest::nodeaddresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kvstore.ActiveNodesRequest.nodeAddresses)
  return _internal_nodeaddresses().Get(index);
}
inline std::string* ActiveNodesRequest::mutable_nodeaddresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kvstore.ActiveNodesRequest.nodeAddresses)
  return _internal_mutable_nodeaddresses()->Mutable(index);
}
inline void ActiveNodesRequest::set_nodeaddresses(int index, const std::string& value) {
  _internal_mutable_nodeaddresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline void ActiveNodesRequest::set_nodeaddresses(int index, std::string&& value) {
  _internal_mutable_nodeaddresses()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline void ActiveNodesRequest::set_nodeaddresses(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_nodeaddresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline void ActiveNodesRequest::set_nodeaddresses(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_nodeaddresses()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline void ActiveNodesRequest::set_nodeaddresses(int index, absl::string_view value) {
  _internal_mutable_nodeaddresses()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline void ActiveNodesRequest::add_nodeaddresses(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodeaddresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline void ActiveNodesRequest::add_nodeaddresses(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodeaddresses()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline void ActiveNodesRequest::add_nodeaddresses(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodeaddresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline void ActiveNodesRequest::add_nodeaddresses(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodeaddresses()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline void ActiveNodesRequest::add_nodeaddresses(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodeaddresses()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:kvstore.ActiveNodesRequest.nodeAddresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ActiveNodesRequest::nodeaddresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kvstore.ActiveNodesRequest.nodeAddresses)
  return _internal_nodeaddresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ActiveNodesRequest::mutable_nodeaddresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kvstore.ActiveNodesRequest.nodeAddresses)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_nodeaddresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ActiveNodesRequest::_internal_nodeaddresses() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nodeaddresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ActiveNodesRequest::_internal_mutable_nodeaddresses() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.nodeaddresses_;
}

// -------------------------------------------------------------------

// ActiveNodesResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace kvstore


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_kv_5flifecycle_2eproto_2epb_2eh
